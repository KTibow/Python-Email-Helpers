name: Test lint and build

on:
  push:
    branches: [ master ]

jobs:
  test:
    name: "Test package"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5.4, 3.5.9, 3.6.7, 3.6.8, 3.6.9, 3.6.10, 3.7.5, 3.7.6, 3.7.7, 3.8, 3.8.2]

    steps:
    - uses: actions/checkout@v2
      name: Checkout normal
      with:
        path: normal
    - uses: actions/checkout@v2
      name: Checkout coverage
      with:
        ref: coverage
        path: coverage
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: pip-packs-${{ hashFiles('**/testrequirements.txt') }}
        restore-keys: |
          pip-packs-
          pip-packs
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 wheel setuptools pytest coverage
        if [ -f testrequirements.txt ]; then pip install -r testrequirements.txt; fi
    - name: Lint with flake8
      run: |
        cd normal
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test building
      run: |
        cd normal
        python3 setup.py sdist bdist_wheel
        ls dist
        pip install dist/*.whl
    - uses: actions/upload-artifact@v2
      name: Upload build
      if: matrix.python-version == 3.8
      with:
        name: dist
        path: ./normal/dist/
    - name: Test emailHelpers with coverage and pytest
      run: |
        cd normal
        coverage run -m pytest test.py
        coverage report -m
        coverage annotate
    - name: Uninstall emailHelpers
      run: pip uninstall emailHelpers -y
    - name: Push reports
      if: matrix.python-version == 3.8
      run: |
        rm -r coverage/*
        mv normal/* coverage/ --force
        cd coverage/
        git rm * || true
        cp "emailHelpers/__init__.py,cover" "*emailHelpersCoverage.py"
        git add "*emailHelpersCoverage.py" || true
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'runner@users.noreply.github.com'
        git commit -am "Coverage" || true
        git pull
        git push origin HEAD:coverage || true
  vt-scan:
    name: "VirusTotal Scan"
    runs-on: "ubuntu-latest"
    needs: test
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions/download-artifact@v2
        name: Download build
        with:
          name: dist
          path: dist
      - name: Show files
        run: |
          ls -R
      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v2
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            *
            emailHelpers/*
            dist/*
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"
    needs: vt-scan
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "zlatest"
          prerelease: true
          title: "Development Build"
